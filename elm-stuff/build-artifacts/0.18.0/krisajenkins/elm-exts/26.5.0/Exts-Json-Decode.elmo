var _krisajenkins$elm_exts$Exts_Json_Decode$set = function (_p0) {
	return A2(
		_elm_lang$core$Json_Decode$map,
		_elm_lang$core$Set$fromList,
		_elm_lang$core$Json_Decode$list(_p0));
};
var _krisajenkins$elm_exts$Exts_Json_Decode$customDecoder = F2(
	function (decoder, parser) {
		return A2(
			_elm_lang$core$Json_Decode$andThen,
			function (s) {
				var _p1 = parser(s);
				if (_p1.ctor === 'Err') {
					return _elm_lang$core$Json_Decode$fail(_p1._0);
				} else {
					return _elm_lang$core$Json_Decode$succeed(_p1._0);
				}
			},
			decoder);
	});
var _krisajenkins$elm_exts$Exts_Json_Decode$decodeDate = A2(_krisajenkins$elm_exts$Exts_Json_Decode$customDecoder, _elm_lang$core$Json_Decode$string, _elm_lang$core$Date$fromString);
var _krisajenkins$elm_exts$Exts_Json_Decode$parseWith = F2(
	function (f, input) {
		var _p2 = f(input);
		if (_p2.ctor === 'Err') {
			return _elm_lang$core$Json_Decode$fail(_p2._0);
		} else {
			return _elm_lang$core$Json_Decode$succeed(_p2._0);
		}
	});
var _krisajenkins$elm_exts$Exts_Json_Decode$decodeTime = A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Date$fromTime, _elm_lang$core$Json_Decode$float);
var _krisajenkins$elm_exts$Exts_Json_Decode$parseEmptyOrString = function (string) {
	return _elm_lang$core$String$isEmpty(
		_elm_lang$core$String$trim(string)) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(string);
};
var _krisajenkins$elm_exts$Exts_Json_Decode$stringIgnoringBlanks = A2(
	_elm_lang$core$Json_Decode$andThen,
	function (maybeString) {
		return _elm_lang$core$Json_Decode$succeed(
			A2(_elm_lang$core$Maybe$andThen, _krisajenkins$elm_exts$Exts_Json_Decode$parseEmptyOrString, maybeString));
	},
	_elm_lang$core$Json_Decode$maybe(_elm_lang$core$Json_Decode$string));
