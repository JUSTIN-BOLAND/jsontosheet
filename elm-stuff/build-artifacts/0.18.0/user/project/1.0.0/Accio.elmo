var _user$project$Accio$getHeaders = function (token) {
	return A2(
		_elm_lang$http$Http$header,
		'Authorization',
		A2(_elm_lang$core$Basics_ops['++'], 'Bearer ', token));
};
var _user$project$Accio$putRequest = F3(
	function (token, model, requestBody) {
		return _elm_lang$http$Http$request(
			{
				method: 'POST',
				headers: {
					ctor: '::',
					_0: _user$project$Accio$getHeaders(token),
					_1: {ctor: '[]'}
				},
				url: 'https://sheets.googleapis.com/v4/spreadsheets',
				body: _elm_lang$http$Http$jsonBody(requestBody),
				expect: _elm_lang$http$Http$expectJson(
					A2(_elm_lang$core$Json_Decode$field, 'spreadsheetUrl', _elm_lang$core$Json_Decode$string)),
				timeout: _elm_lang$core$Maybe$Nothing,
				withCredentials: false
			});
	});
var _user$project$Accio$packageState = function (url) {
	var _p0 = url;
	if (_p0.ctor === 'Just') {
		if (_p0._0.ctor === 'Json') {
			return _elm_lang$http$Http$encodeUri(_p0._0._0);
		} else {
			return _elm_lang$http$Http$encodeUri(_p0._0._0);
		}
	} else {
		return '';
	}
};
var _user$project$Accio$showUrl = function (model) {
	var _p1 = model.url;
	if (_p1.ctor === 'Just') {
		if (_p1._0.ctor === 'Json') {
			return _elm_lang$html$Html$text(_p1._0._0);
		} else {
			return _elm_lang$html$Html$text(_p1._0._0);
		}
	} else {
		return _elm_lang$html$Html$text('');
	}
};
var _user$project$Accio$bootstrap = A3(
	_elm_lang$html$Html$node,
	'link',
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$href('https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css'),
		_1: {
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
			_1: {ctor: '[]'}
		}
	},
	{ctor: '[]'});
var _user$project$Accio$setExpiration = F2(
	function (response, token) {
		var _p2 = A2(
			_elm_lang$core$Debug$log,
			'decoded string',
			A2(
				_elm_lang$core$Json_Decode$decodeString,
				_elm_lang$core$Json_Decode$maybe(
					A2(_elm_lang$core$Json_Decode$field, 'expires_in', _elm_lang$core$Json_Decode$string)),
				response));
		if (_p2.ctor === 'Ok') {
			if (_p2._0.ctor === 'Just') {
				return token;
			} else {
				return _elm_lang$core$Maybe$Nothing;
			}
		} else {
			return _elm_lang$core$Maybe$Nothing;
		}
	});
var _user$project$Accio$validateTokenUrl = function (token) {
	return A2(
		_user$project$OAuth$url,
		'https://www.googleapis.com/oauth2/v3/tokeninfo',
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'access_token', _1: token},
			_1: {ctor: '[]'}
		});
};
var _user$project$Accio$setAndGetToken = _elm_lang$core$Native_Platform.outgoingPort(
	'setAndGetToken',
	function (v) {
		return v;
	});
var _user$project$Accio$getToken = _elm_lang$core$Native_Platform.outgoingPort(
	'getToken',
	function (v) {
		return v;
	});
var _user$project$Accio$saveToken = function (location) {
	var _p3 = _user$project$OAuth$parseToken(location);
	if (_p3.ctor === 'Just') {
		return _user$project$Accio$setAndGetToken(_p3._0);
	} else {
		return _user$project$Accio$getToken('get token');
	}
};
var _user$project$Accio$getTokenResponse = _elm_lang$core$Native_Platform.incomingPort(
	'getTokenResponse',
	_elm_lang$core$Json_Decode$oneOf(
		{
			ctor: '::',
			_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, _elm_lang$core$Json_Decode$string),
				_1: {ctor: '[]'}
			}
		}));
var _user$project$Accio$setAndGetTokenResponse = _elm_lang$core$Native_Platform.incomingPort(
	'setAndGetTokenResponse',
	_elm_lang$core$Json_Decode$oneOf(
		{
			ctor: '::',
			_0: _elm_lang$core$Json_Decode$null(_elm_lang$core$Maybe$Nothing),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$core$Json_Decode$map, _elm_lang$core$Maybe$Just, _elm_lang$core$Json_Decode$string),
				_1: {ctor: '[]'}
			}
		}));
var _user$project$Accio$Model = F5(
	function (a, b, c, d, e) {
		return {url: a, errorMessage: b, token: c, spreadsheetUrl: d, showDialog: e};
	});
var _user$project$Accio$Json = function (a) {
	return {ctor: 'Json', _0: a};
};
var _user$project$Accio$ApiUrl = function (a) {
	return {ctor: 'ApiUrl', _0: a};
};
var _user$project$Accio$validateState = function (state) {
	var _p4 = state;
	if (_p4.ctor === 'Just') {
		var _p5 = _p4._0;
		return A2(
			_elm_lang$core$Regex$contains,
			_elm_lang$core$Regex$regex('{'),
			_p5) ? _elm_lang$core$Maybe$Just(
			_user$project$Accio$Json(
				A2(
					_elm_lang$core$Maybe$withDefault,
					'error',
					_elm_lang$http$Http$decodeUri(_p5)))) : _elm_lang$core$Maybe$Just(
			_user$project$Accio$ApiUrl(
				A2(
					_elm_lang$core$Maybe$withDefault,
					'error',
					_elm_lang$http$Http$decodeUri(_p5))));
	} else {
		return _elm_lang$core$Maybe$Nothing;
	}
};
var _user$project$Accio$init = function (location) {
	return {
		ctor: '_Tuple2',
		_0: A5(
			_user$project$Accio$Model,
			_user$project$Accio$validateState(
				_user$project$OAuth$parseState(location)),
			'',
			_elm_lang$core$Maybe$Nothing,
			'',
			false),
		_1: _elm_lang$core$Platform_Cmd$batch(
			{
				ctor: '::',
				_0: _elm_lang$navigation$Navigation$modifyUrl('#'),
				_1: {
					ctor: '::',
					_0: _user$project$Accio$saveToken(location),
					_1: {ctor: '[]'}
				}
			})
	};
};
var _user$project$Accio$validateInput = function (str) {
	return A2(
		_elm_lang$core$Regex$contains,
		_elm_lang$core$Regex$regex('{'),
		str) ? _elm_lang$core$Maybe$Just(
		_user$project$Accio$Json(str)) : _elm_lang$core$Maybe$Just(
		_user$project$Accio$ApiUrl(str));
};
var _user$project$Accio$ValidateToken = function (a) {
	return {ctor: 'ValidateToken', _0: a};
};
var _user$project$Accio$validateToken = function (token) {
	var _p6 = token;
	if (_p6.ctor === 'Just') {
		return A2(
			_elm_lang$http$Http$send,
			_user$project$Accio$ValidateToken,
			_elm_lang$http$Http$getString(
				_user$project$Accio$validateTokenUrl(_p6._0)));
	} else {
		return _elm_lang$core$Platform_Cmd$none;
	}
};
var _user$project$Accio$TokenValue = function (a) {
	return {ctor: 'TokenValue', _0: a};
};
var _user$project$Accio$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _user$project$Accio$setAndGetTokenResponse(_user$project$Accio$TokenValue),
			_1: {
				ctor: '::',
				_0: _user$project$Accio$getTokenResponse(_user$project$Accio$TokenValue),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Accio$Error = function (a) {
	return {ctor: 'Error', _0: a};
};
var _user$project$Accio$PostCsv = function (a) {
	return {ctor: 'PostCsv', _0: a};
};
var _user$project$Accio$requestCsv = F3(
	function (token, model, requestBody) {
		var _p7 = token;
		if (_p7.ctor === 'Just') {
			return A2(
				_elm_lang$http$Http$send,
				_user$project$Accio$PostCsv,
				A3(_user$project$Accio$putRequest, _p7._0, model, requestBody));
		} else {
			return _elm_lang$core$Platform_Cmd$none;
		}
	});
var _user$project$Accio$Fetch = function (a) {
	return {ctor: 'Fetch', _0: a};
};
var _user$project$Accio$getJson = function (url) {
	return A2(
		_elm_lang$http$Http$send,
		_user$project$Accio$Fetch,
		_elm_lang$http$Http$getString(url));
};
var _user$project$Accio$getData = F2(
	function (input, model) {
		var _p8 = input;
		if (_p8.ctor === 'Just') {
			if (_p8._0.ctor === 'Json') {
				return A3(
					_user$project$Accio$requestCsv,
					model.token,
					model,
					_user$project$GoogleSheet$createSheet(_p8._0._0));
			} else {
				return _user$project$Accio$getJson(_p8._0._0);
			}
		} else {
			return _elm_lang$core$Platform_Cmd$none;
		}
	});
var _user$project$Accio$update = F2(
	function (msg, model) {
		var _p9 = msg;
		switch (_p9.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'Url':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							url: _user$project$Accio$validateInput(_p9._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'OpenDialog':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{showDialog: true}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'CloseDialog':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{showDialog: false}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Authorize':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$navigation$Navigation$load(
						_user$project$OAuth$requestToken(
							_user$project$Accio$packageState(model.url)))
				};
			case 'GetData':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(_user$project$Accio$getData, model.url, model)
				};
			case 'Fetch':
				if (_p9._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: model,
						_1: A3(
							_user$project$Accio$requestCsv,
							model.token,
							model,
							_user$project$GoogleSheet$createSheet(_p9._0._0))
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								errorMessage: _elm_lang$core$Basics$toString(_elm_lang$core$Result$Err)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			case 'PostCsv':
				if (_p9._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{spreadsheetUrl: _p9._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'Error':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{errorMessage: _p9._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'TokenValue':
				var _p10 = _p9._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{token: _p10}),
					_1: _user$project$Accio$validateToken(_p10)
				};
			default:
				if (_p9._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								token: A2(_user$project$Accio$setExpiration, _p9._0._0, model.token)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
var _user$project$Accio$GetData = {ctor: 'GetData'};
var _user$project$Accio$CloseDialog = {ctor: 'CloseDialog'};
var _user$project$Accio$OpenDialog = {ctor: 'OpenDialog'};
var _user$project$Accio$Authorize = {ctor: 'Authorize'};
var _user$project$Accio$authorizeOrConvert = function (model) {
	var _p11 = model.token;
	if (_p11.ctor === 'Just') {
		return A2(
			_elm_lang$html$Html$button,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('btn btn-primary'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onClick(_user$project$Accio$GetData),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$style(
							{
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '10px'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
									_1: {ctor: '[]'}
								}
							}),
						_1: {ctor: '[]'}
					}
				}
			},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text('Convert'),
				_1: {ctor: '[]'}
			});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('btn btn-default'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onClick(_user$project$Accio$OpenDialog),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$style(
									{
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '10px'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Convert'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$button,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('btn btn-primary'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Accio$Authorize),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'margin', _1: '10px 10px 0 0 '},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'float', _1: 'right'},
												_1: {ctor: '[]'}
											}
										}),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Connect to Google'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	}
};
var _user$project$Accio$dialogConfig = function (model) {
	return {
		closeMessage: _elm_lang$core$Maybe$Just(_user$project$Accio$CloseDialog),
		containerClass: _elm_lang$core$Maybe$Nothing,
		header: _elm_lang$core$Maybe$Just(
			A2(
				_elm_lang$html$Html$h3,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Connect to Google'),
					_1: {ctor: '[]'}
				})),
		body: _elm_lang$core$Maybe$Just(
			A2(
				_elm_lang$html$Html$p,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Before converting to a Google Sheet, you must first connect your Google Account'),
					_1: {ctor: '[]'}
				})),
		footer: _elm_lang$core$Maybe$Just(
			A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('btn btn-primary'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_user$project$Accio$Authorize),
						_1: {ctor: '[]'}
					}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Authorize'),
					_1: {ctor: '[]'}
				}))
	};
};
var _user$project$Accio$Url = function (a) {
	return {ctor: 'Url', _0: a};
};
var _user$project$Accio$inputOrLink = function (model) {
	var _p12 = model.spreadsheetUrl;
	if (_p12 === '') {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$textarea,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('Enter your JSON or URL here.'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('form-control'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$rows(10),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$cols(70),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Accio$Url),
										_1: {ctor: '[]'}
									}
								}
							}
						}
					},
					{
						ctor: '::',
						_0: _user$project$Accio$showUrl(model),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: _user$project$Accio$authorizeOrConvert(model),
					_1: {ctor: '[]'}
				}
			});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$a,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$href(_p12),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Click here to see your spreadsheet'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			});
	}
};
var _user$project$Accio$view = function (model) {
	return A2(
		_elm_lang$html$Html$body,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('container-fluid'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Accio$bootstrap,
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('row'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('col-md-6'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$h1,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Turn JSON into a Google Sheet'),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$h4,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(
												A2(_elm_lang$core$Maybe$withDefault, '', model.token)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$h4,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(model.errorMessage),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: _user$project$Accio$inputOrLink(model),
											_1: {
												ctor: '::',
												_0: _krisajenkins$elm_dialog$Dialog$view(
													model.showDialog ? _elm_lang$core$Maybe$Just(
														_user$project$Accio$dialogConfig(model)) : _elm_lang$core$Maybe$Nothing),
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Accio$NoOp = {ctor: 'NoOp'};
var _user$project$Accio$main = A2(
	_elm_lang$navigation$Navigation$program,
	_elm_lang$core$Basics$always(_user$project$Accio$NoOp),
	{init: _user$project$Accio$init, view: _user$project$Accio$view, update: _user$project$Accio$update, subscriptions: _user$project$Accio$subscriptions})();
